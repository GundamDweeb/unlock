{
  "name": "@unlock-protocol/subgraph",
  "version": "0.0.1",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "clean": "rm -rf abis networks.json build generated",
    "prepare": "yarn prepare:networks && yarn prepare:abis",
    "prepare:networks": "node ./bin/networks.js",
    "prepare:abis": "node -e 'require(\"./bin/abis.js\").parseAndCopyAbis()'",
    "show-events": "node -e 'require(\"./bin/abis.js\").showAllEvents()'",
    "codegen": "graph codegen",
    "build": "yarn introspect && yarn prepare && yarn codegen && yarn build:graph",
    "build:graph": "node bin/thegraph build",
    "deploy": "node bin/thegraph deploy",
    "deploy-all": "node bin/thegraph deploy-all",
    "create-local": "graph create --node http://localhost:8020/ ",
    "remove-local": "graph remove --node http://localhost:8020/ ",
    "deploy-local": "graph deploy --node http://localhost:8020/ --ipfs http://localhost:5001",
    "introspect": "/bin/sh -c 'if test \"$CI\" != \"true\" ; then node bin/introspect.js; fi'",
    "introspect:local": "INTROSPECT_NETWORK=31337 node bin/introspect.js",
    "test": "graph test",
    "deploy:studio": "graph deploy --node https://api.studio.thegraph.com/deploy/ --ipfs https://api.thegraph.com/ipfs/ unlock-protocol-mainnet",
    "ci": "yarn prepare && yarn codegen && yarn test -l",
    "lint": "eslint --resolve-plugins-relative-to ../packages/eslint-config --ext .ts,.js src/ bin/",
    "generate-arbitrum": "mustache config/arbitrum.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-avalanche": "mustache config/avalanche.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-base-goerli": "mustache config/base-goerli.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-base": "mustache config/base.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-bsc": "mustache config/bsc.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-bsc-v2": "mustache config/bsc-v2.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-celo": "mustache config/celo.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-gnosis": "mustache config/gnosis.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-gnosis-v2": "mustache config/gnosis-v2.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-goerli": "mustache config/goerli.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-mainnet": "mustache config/mainnet.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-mainnet-v2": "mustache config/mainnet-v2.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-mumbai": "mustache config/mumbai.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-optimism": "mustache config/optimism.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-palm": "mustache config/palm.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-polygon": "mustache config/polygon.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "generate-polygon-v2": "mustache config/polygon-v2.json subgraph.template.yaml > subgraph.yaml && graph codegen",
    "deploy-hosted-arbitrum": "graph deploy --product hosted-service gundamdweeb/unlock-arbitrum",
    "deploy-hosted-avalanche": "graph deploy --product hosted-service gundamdweeb/unlock-avalanche",
    "deploy-hosted-bsc": "graph deploy --product hosted-service unlock-protocol/bsc",
    "deploy-hosted-bsc-v2": "graph deploy --product hosted-service unlock-protocol/bsc-v2",
    "deploy-hosted-celo": "graph deploy --product hosted-service unlock-protocol/celo",
    "deploy-hosted-gnosis": "graph deploy --product hosted-service unlock-protocol/xdai",
    "deploy-hosted-gnosis-v2": "graph deploy --product hosted-service unlock-protocol/gnosis-v2",
    "deploy-hosted-goerli": "graph deploy --product hosted-service unlock-protocol/goerli",
    "deploy-hosted-mainnet": "graph deploy --product hosted-service unlock-protocol/unlock",
    "deploy-hosted-mainnet-v2": "graph deploy --product hosted-service unlock-protocol/mainnet-v2",
    "deploy-hosted-mumbai": "graph deploy --product hosted-service unlock-protocol/mumbai",
    "deploy-hosted-optimism": "graph deploy --product hosted-service unlock-protocol/optimism",
    "deploy-hosted-polygon-v2": "graph deploy --product hosted-service unlock-protocol/polygon-v2",
    "deploy-hosted-polygon": "graph deploy --product hosted-service unlock-protocol/polygon",
    "deploy-studio-arbitrum": "graph codegen && graph build && graph deploy --studio unlock-test-arb",
    "deploy-studio-avalanche": "graph codegen && graph build && graph deploy --studio unlock-test-avax",
    "deploy-studio-base-goerli": "graph codegen && graph build && graph deploy --studio unlock-protocol-base-goerli",
    "deploy-studio-base": "graph codegen && graph build && graph deploy --studio unlock-protocol-base",
    "deploy-studio-celo": "graph codegen && graph build && graph deploy --studio unlock-protocol-celo",
    "deploy-studio-gnosis": "graph codegen && graph build && graph deploy --studio unlock-protocol-xdai",
    "deploy-studio-goerli": "graph codegen && graph build && graph deploy --studio unlock-protocol-goerli",
    "deploy-studio-mainnet": "graph codegen && graph build && graph deploy --studio unlock-protocol",
    "deploy-studio-mumbai": "graph codegen && graph build && graph deploy --studio unlock-protocol-mumbai",
    "deploy-studio-optimism": "graph codegen && graph build && graph deploy --studio unlock-protocol-optimism",
    "deploy-studio-polygon": "graph codegen && graph build && graph deploy --studio unlock-protocol-polygon"
  },
  "dependencies": {
    "@graphprotocol/graph-cli": "0.53.0",
    "@graphprotocol/graph-ts": "0.31.0",
    "@unlock-protocol/eslint-config": "workspace:./packages/eslint-config",
    "@unlock-protocol/networks": "workspace:^",
    "eslint": "8.46.0",
    "fs-extra": "11.1.1",
    "handlebars": "4.7.8",
    "yargs": "17.7.2"
  },
  "installConfig": {
    "hoistingLimits": "workspaces"
  },
  "devDependencies": {
    "graphql": "16.7.1",
    "matchstick-as": "0.5.2"
  }
}
